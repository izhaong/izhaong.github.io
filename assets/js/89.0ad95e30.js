(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{428:function(t,a,s){"use strict";s.r(a);var r=s(4),v=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"共同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共同点"}},[t._v("#")]),t._v(" 共同点：")]),t._v(" "),a("p",[t._v("都能实现对数据的监听")]),t._v(" "),a("p",[a("strong",[t._v("watch和computed都是以Vue的依赖追踪机制为基础")]),t._v("的，当某一个依赖型数据（依赖型数据：简单理解即放在 data 等对象下的实例数据）发生变化的时候，所有依赖这个数据的相关数据会自动发生变化，即自动调用相关的函数，来实现数据的变动。")]),t._v(" "),a("h2",{attrs:{id:"不同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[t._v("#")]),t._v(" 不同点：")]),t._v(" "),a("h3",{attrs:{id:"compouted"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compouted"}},[t._v("#")]),t._v(" compouted")]),t._v(" "),a("ul",[a("li",[t._v("这个属性依赖其他属性，由"),a("strong",[t._v("其他属性计算而来")]),t._v("的。")]),t._v(" "),a("li",[t._v("不支持异步")]),t._v(" "),a("li",[t._v("computed 属性值默认会"),a("strong",[t._v("缓存")]),t._v("计算结果，在重复的调用中，只要依赖数据不变，直接取缓存中的计算结果，只有"),a("strong",[t._v("依赖型数据")]),t._v("发生"),a("strong",[t._v("改变")]),t._v("，computed 才会重新计算")])]),t._v(" "),a("h3",{attrs:{id:"watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[t._v("#")]),t._v(" watch")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("支持异步")]),t._v("（当需要在数据变化时执行异步或开销较大的操作时，watch方式是最有用的）")]),t._v(" "),a("li",[a("strong",[t._v("不支持缓存")]),t._v("，监听的数据改变，直接会触发相应的操作；")])])])}),[],!1,null,null,null);a.default=v.exports}}]);
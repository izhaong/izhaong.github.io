(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{366:function(_,v,t){"use strict";t.r(v);var e=t(4),l=Object(e.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("@[toc]\n"),v("strong",[_._v("漏洞只能减少, 无法根除,")]),_._v(" "),v("em",[_._v("本文只初步介绍常见的攻击手段及客户端的基本防御")])]),_._v(" "),v("h2",{attrs:{id:"攻击手段及原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#攻击手段及原理"}},[_._v("#")]),_._v(" 攻击手段及原理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("上传文件是WebShell时，攻击者可通过这些网页后门执行命令并控制服务器；")])]),_._v(" "),v("li",[v("p",[_._v("上传文件是其他恶意脚本时，攻击者可直接执行脚本进行攻击；")])]),_._v(" "),v("li",[v("p",[_._v("上传文件是恶意图片时，图片中可能包含了脚本，加载或者点击这些图片时脚本会悄无声息的执行；")])]),_._v(" "),v("li",[v("p",[_._v("上传文件是伪装成正常后缀的恶意脚本时，攻击者可借助本地文件包含漏洞(Local File Include)执行该文件。如将bad.php文件改名为bad.doc上传到服务器，再通过PHP的include，include_once，require，require_once等函数包含执行。")])])]),_._v(" "),v("h2",{attrs:{id:"客户端问题-非第三方工具-nc-fidder等上传工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#客户端问题-非第三方工具-nc-fidder等上传工具"}},[_._v("#")]),_._v(" 客户端问题(非第三方工具 NC Fidder等上传工具)")]),_._v(" "),v("ul",[v("li",[_._v("文件上传检查不严, 没有进行文件格式检查\n"),v("ul",[v("li",[_._v("例如: .php  .Php .pHp等")])])]),_._v(" "),v("li",[_._v("文件名没有检查\n"),v("ul",[v("li",[_._v("例如: xxx.php%00.jpg, (%00为十六进制的0x00字符, 对于服务器来说，因为%00字符截断的关系，最终上传的文件变成了xxx.php)")])])]),_._v(" "),v("li",[_._v("有"),v("strong",[_._v("修改文件名")]),_._v("功能是带了后缀( 先传输.jpg后, 改文件名是把文件后缀更换为 .php)")])]),_._v(" "),v("h2",{attrs:{id:"抵御方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#抵御方法"}},[_._v("#")]),_._v(" 抵御方法")]),_._v(" "),v("ul",[v("li",[_._v("检查文件名后缀(注意大小写, 可先统一转换小写或是大写)")]),_._v(" "),v("li",[_._v("重构文件名称(防止 xxx.php%00.jpg这种类型)")]),_._v(" "),v("li",[_._v("若是图片, 使用resize函数, 压缩方式更改其大小, 这样就算是脚本, 里面的代码也会被破坏导致无法使用")]),_._v(" "),v("li",[_._v("不可修改文件名后缀")])])])}),[],!1,null,null,null);v.default=l.exports}}]);
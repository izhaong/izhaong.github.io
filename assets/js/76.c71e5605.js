(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{414:function(s,n,t){"use strict";t.r(n);var e=t(4),a=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"pnpm介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pnpm介绍"}},[s._v("#")]),s._v(" pnpm介绍")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/izhaong/izhaong.com-oss_2023/blogImg/abnerworks.Typora/20230917-152329-1692628078682-8a6e6ed0-b9b1-4c10-b9be-671e430b618d.svg",alt:"img"}})]),s._v(" "),n("p",[s._v("当使用 npm 时，如果你有 100 个项目，并且所有项目都有一个相同的依赖包，那么， 你在硬盘上就需要保存 100 份该相同依赖包的副本。然而，如果是使用 pnpm，依赖包将被 存放在一个统一的位置，因此：")]),s._v(" "),n("ol",[n("li",[s._v("如果你对同一依赖包需要使用不同的版本，则仅有 版本之间不同的文件会被存储起来。例如，如果某个依赖包包含 100 个文件，其发布了一个新 版本，并且新版本中只有一个文件有修改，则 pnpm update 只需要添加一个 新文件到存储中，而不会因为一个文件的修改而保存依赖包的 所有文件。")]),s._v(" "),n("li",[s._v("所有文件都保存在硬盘上的统一的位置。当安装软件包时， 其包含的所有文件都会硬链接自此位置，而不会占用 额外的硬盘空间。这让你可以在项目之间方便地共享相同版本的 依赖包。")])]),s._v(" "),n("p",[s._v("最终结果就是以项目和依赖包的比例来看，你节省了大量的硬盘空间， 并且安装速度也大大提高了！")]),s._v(" "),n("h2",{attrs:{id:"配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),n("p",[s._v("pnpm 使用的是 "),n("a",{attrs:{href:"https://docs.npmjs.com/misc/config",target:"_blank",rel:"noopener noreferrer"}},[s._v("npm 的配置"),n("OutboundLink")],1),s._v(" 格式。因此，你应该以 npm 相同的方式来对其进行配置。例如，")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("pnpm config set store-dir /path/to/.pnpm-store\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如果未配置任何存储，则 pnpm 将在同一硬盘上自动创建一个存储。 如果你需要 pnpm 能够跨多个硬盘或文件系统工作， 请阅读 "),n("a",{attrs:{href:"https://www.pnpm.cn/faq#does-pnpm-work-across-multiple-hard-drives-or-filesystems",target:"_blank",rel:"noopener noreferrer"}},[s._v("FAQ"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"pnpm源配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pnpm源配置"}},[s._v("#")]),s._v(" pnpm源配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('pnpm set registry "https://registry.npmmirror.com"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"pnpm-实际安装位置配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pnpm-实际安装位置配置"}},[s._v("#")]),s._v(" pnpm 实际安装位置配置")]),s._v(" "),n("p",[s._v("默认安装在该项目盘路径的.pnpm-store 上")]),s._v(" "),n("p",[n("strong",[s._v("修改")])]),s._v(" "),n("p",[s._v("在pnpm的配置文件中配置以下配置:")]),s._v(" "),n("ol",[n("li",[s._v("配置PNPM全局安装路径")]),s._v(" "),n("li",[s._v("配置PNPM全局bin文件安装路径")]),s._v(" "),n("li",[s._v("配置PNPM cache路径")]),s._v(" "),n("li",[s._v("配置PNPM state路径")])]),s._v(" "),n("p",[s._v("把E:.pnpm-store替换成PNP全局安装的路径")]),s._v(" "),n("div",{staticClass:"language-plain line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v('shell\n复制代码pnpm config set global-bin-dir "E:\\.pnpm-store"\npnpm config set cache-dir "E:\\.pnpm-store\\cache"\npnpm config set state-dir "E:\\.pnpm-store\\state"\npnpm config set global-dir "E:\\.pnpm-store\\global"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("软件包存储应与安装位于同一驱动器和文件系统上，否则软件包将被复制，而不是链接。这是由于硬链接工作方式的限制，一个文件系统上的文件无法寻址另一个文件系统中的位置。")])])}),[],!1,null,null,null);n.default=a.exports}}]);
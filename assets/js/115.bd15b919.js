(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{454:function(t,a,e){"use strict";e.r(a);var s=e(4),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[t._v("一种编程范式")]),t._v(" "),a("li",[t._v("纯函数")]),t._v(" "),a("li",[t._v("不可变值")])]),t._v(" "),a("h2",{attrs:{id:"vdom-和-diff-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vdom-和-diff-算法"}},[t._v("#")]),t._v(" vdom 和 diff 算法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("h 函数")])]),t._v(" "),a("li",[a("p",[t._v("vnode 数据结构")])]),t._v(" "),a("li",[a("p",[t._v("patch 函数")])]),t._v(" "),a("li",[a("p",[t._v("只比较同一层级，不跨级比较")])]),t._v(" "),a("li",[a("p",[t._v("tag 不相同，则直接删掉重建，不再深度比较")])]),t._v(" "),a("li",[a("p",[t._v("tag 和 key，两者都相同，则认为是相同节点，不再深度比较")])])]),t._v(" "),a("h2",{attrs:{id:"jsx-本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-本质"}},[t._v("#")]),t._v(" JSX 本质")]),t._v(" "),a("ul",[a("li",[t._v("JSX 即 createElement 函数")]),t._v(" "),a("li",[t._v("执行生成 vnode")]),t._v(" "),a("li",[t._v("patch(elem, vnode) 和 patch(vnode, newVnode)")])]),t._v(" "),a("h2",{attrs:{id:"合成事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合成事件"}},[t._v("#")]),t._v(" 合成事件")]),t._v(" "),a("ul",[a("li",[t._v("所有事件挂载到 document 上（"),a("strong",[t._v("React17版本开始，事件就不再绑定到 document上了，放到了root组件上")]),t._v("）")]),t._v(" "),a("li",[t._v("event 不是原生的，是 SyntheticEvent 合成事件对象")]),t._v(" "),a("li",[t._v("和 Vue 事件不同，和 DOM 事件也不同")])]),t._v(" "),a("h4",{attrs:{id:"为何要合成事件机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何要合成事件机制"}},[t._v("#")]),t._v(" 为何要合成事件机制？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("更好的兼容性和跨平台")])]),t._v(" "),a("li",[a("p",[t._v("载到 document，减少内存消耗，避免频繁解绑")])]),t._v(" "),a("li",[a("p",[t._v("方便事件的统一管理（如事务机制）")])])]),t._v(" "),a("h4",{attrs:{id:"react-17-事件绑定到-root"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-17-事件绑定到-root"}},[t._v("#")]),t._v(" React 17 事件绑定到 root")]),t._v(" "),a("ul",[a("li",[t._v("React 16 绑定到 document")]),t._v(" "),a("li",[t._v("React 17 事件绑定到 root 组件")]),t._v(" "),a("li",[t._v("有利于多个 React 版本并存，例如微前端")])]),t._v(" "),a("h2",{attrs:{id:"setstate-和-batchupdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstate-和-batchupdate"}},[t._v("#")]),t._v(" setState 和 batchUpdate")]),t._v(" "),a("ul",[a("li",[t._v("有时异步（普通使用），有时同步 ( setTimeout、 DOM 事件）")]),t._v(" "),a("li",[t._v("有时合并（对象形式），有时不合并（函数形式）")]),t._v(" "),a("li",[t._v("后者比较好理解（像 Object.assign ），主要讲解前者")])]),t._v(" "),a("h4",{attrs:{id:"核心要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心要点"}},[t._v("#")]),t._v(" 核心要点")]),t._v(" "),a("h5",{attrs:{id:"setstate-主流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstate-主流程"}},[t._v("#")]),t._v(" setState 主流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/izhaong/izhaong.com-oss/blogImg/1050150.React%20%E5%8E%9F%E7%90%86%20%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/2022/07/04/11-07-29-a6acda060eeb64bc4e23c304133f8f43-image-20220704110728020-fddf4a.png",alt:"image-20220704110728020"}})]),t._v(" "),a("h5",{attrs:{id:"batchupdate-机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#batchupdate-机制"}},[t._v("#")]),t._v(" batchUpdate 机制")]),t._v(" "),a("p",[a("strong",[t._v("哪些能命中 batchUpdate 机制")])]),t._v(" "),a("ul",[a("li",[t._v("生命周期（和它调用的函数）")]),t._v(" "),a("li",[t._v("React 中注册的事件（和它调用的函数）")]),t._v(" "),a("li",[t._v("React 可以“管理〞的入口")])]),t._v(" "),a("h5",{attrs:{id:"transaction-事务机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transaction-事务机制"}},[t._v("#")]),t._v(" transaction 事务机制")]),t._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +-----------------\x3e|-|---|-|---|--\x3e|anyMethod|---|---|-|---|-|--------\x3e\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h2",{attrs:{id:"组件渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件渲染过程"}},[t._v("#")]),t._v(" 组件渲染过程")]),t._v(" "),a("ul",[a("li",[t._v("props state")]),t._v(" "),a("li",[t._v("render0 生成 vnode")]),t._v(" "),a("li",[t._v("patch (elem, vnode)")])]),t._v(" "),a("p",[t._v("组件初始化\t->\trender 方法 \t-> \t生成虚拟DOM \t-> \tReact.DOM.render 方法 \t-> \t真实DOM")]),t._v(" "),a("p",[t._v("组件更新 -> render 方法\t->\t生成新的虚拟DOM\t->\tdiff算法\t->\t定位出两次虚拟DOM的差异")]),t._v(" "),a("p",[a("strong",[t._v("render方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/izhaong/izhaong.com-oss/blogImg/1050150.React%20%E5%8E%9F%E7%90%86%20%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/2022/07/04/10-55-35-c43a3c9c8aad1d3efd72ea63a42e8bba-image-20220704105512151-2aea11.png",alt:"image-20220704105512151"}})]),t._v(" "),a("h3",{attrs:{id:"组件更新过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件更新过程"}},[t._v("#")]),t._v(" 组件更新过程")]),t._v(" "),a("ul",[a("li",[t._v("setState(newState) --\x3e dirtyComponents（ 可能有子组件）")]),t._v(" "),a("li",[t._v("render0 生成 newVnode")]),t._v(" "),a("li",[t._v("patch(vnode, newVnode)")])]),t._v(" "),a("h4",{attrs:{id:"更新的两个阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新的两个阶段"}},[t._v("#")]),t._v(" 更新的两个阶段")]),t._v(" "),a("ul",[a("li",[t._v("上述的 patch 被拆分为两个阶段：")]),t._v(" "),a("li",[t._v("reconciliation 阶段一执行 diff 算法，纯JS 计算")]),t._v(" "),a("li",[t._v("commit 阶段-将 diff 结果渲染 DOM")])]),t._v(" "),a("h2",{attrs:{id:"fiber-性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber-性能"}},[t._v("#")]),t._v(" fiber 性能")]),t._v(" "),a("h4",{attrs:{id:"可能会有性能问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可能会有性能问题"}},[t._v("#")]),t._v(" 可能会有性能问题")]),t._v(" "),a("ul",[a("li",[t._v("JS是单线程，且和 DOM 渲染共用一个线程")]),t._v(" "),a("li",[t._v("当组件足够复杂，组件更新时计算和渲染都压力大")]),t._v(" "),a("li",[t._v("同时再有 DOM 操作需求（动画，鼠标拖拽等），将卡顿")])]),t._v(" "),a("h4",{attrs:{id:"解决方案-fiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案-fiber"}},[t._v("#")]),t._v(" 解决方案 fiber")]),t._v(" "),a("ul",[a("li",[t._v("将 reconciliation 阶段进行任务拆分 （commit 无法拆分）")]),t._v(" "),a("li",[t._v("DOM 需要渲染时暂停，空闲时恢复")]),t._v(" "),a("li",[t._v("window.requestldleCallback")])])])}),[],!1,null,null,null);a.default=r.exports}}]);
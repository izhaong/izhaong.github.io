(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{561:function(t,e,i){"use strict";i.r(e);var l=i(4),o=Object(l.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("ul",[e("li",[e("p",[t._v("查看本地和远程仓库的所有分支 "),e("code",[t._v("git branch -a")])])]),t._v(" "),e("li",[e("p",[t._v("查看远程仓库的分支"),e("code",[t._v("git branch -r")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git fetch")]),t._v(" 将本地分支与远程保持同步")])]),t._v(" "),e("li",[e("p",[t._v("本地所有分支与远程保持同步 "),e("code",[t._v("git fetch --all")])])]),t._v(" "),e("li",[e("p",[t._v("拉取所有分支代码 "),e("code",[t._v("git pull --all")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git checkout -b 本地分支名x origin/远程分支名x")]),t._v(" 拉取远程分支并同时创建对应的本地分支")])]),t._v(" "),e("li",[e("p",[t._v("同步所有远程分支"),e("code",[t._v('git branch -r | grep -v \'\\->\' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done')])])]),t._v(" "),e("li",[e("p",[t._v("将本地所有分支与远程保持同步 "),e("code",[t._v("git fetch --all")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);
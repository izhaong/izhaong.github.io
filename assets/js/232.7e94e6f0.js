(window.webpackJsonp=window.webpackJsonp||[]).push([[232],{571:function(s,a,e){"use strict";e.r(a);var t=e(4),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("@[toc]")]),s._v(" "),a("h1",{attrs:{id:"sesstion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sesstion"}},[s._v("#")]),s._v(" Sesstion")]),s._v(" "),a("h2",{attrs:{id:"工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[s._v("#")]),s._v(" 工作原理")]),s._v(" "),a("div",{staticClass:"language-mermaid line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sequenceDiagram")]),s._v("\nBrowser"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[s._v("->>")]),s._v(" Server"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" POST/authenticate username=...&password=...\nServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[s._v("->>")]),s._v(" Browser"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" HTTP 200 OK Set-Cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" session=......\nBrowser"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[s._v("->>")]),s._v(" Server"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\tGET/api/user Cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" session=...\nServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[s._v("->>")]),s._v("Server"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" find and deserialize session\nServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[s._v("->>")]),s._v("Browser"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" HTTP 200 OK "),a("span",{pre:!0,attrs:{class:"token text string"}},[s._v('{name: "foo"}')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"session-的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-的优势"}},[s._v("#")]),s._v(" Session 的优势")]),s._v(" "),a("ul",[a("li",[s._v("相比 JWT ， 最大的优势就在于可以主动清楚 session 了")]),s._v(" "),a("li",[s._v("session 保存在服务器端，相对较为安全")]),s._v(" "),a("li",[s._v("结合 cookie 使用， 较为灵活， 兼容性较好")])]),s._v(" "),a("h2",{attrs:{id:"session-的劣势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-的劣势"}},[s._v("#")]),s._v(" Session 的劣势")]),s._v(" "),a("ul",[a("li",[s._v("cookie + session 在跨域场景表现并不好")]),s._v(" "),a("li",[s._v("如果是分布式部署，余姚做多级共享 session 机制")]),s._v(" "),a("li",[s._v("基于 cookie 的机制很容易被 "),a("code",[s._v("CSRF")])]),s._v(" "),a("li",[s._v("查询 ·session· 信息可能会有数据库查询操作")])]),s._v(" "),a("h2",{attrs:{id:"session-相关的概念介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-相关的概念介绍"}},[s._v("#")]),s._v(" Session 相关的概念介绍")]),s._v(" "),a("ul",[a("li",[s._v("session： 主要存放在服务器端， 相对安全")]),s._v(" "),a("li",[s._v("cookie： 主要存放在客户端， 并且不是很安全")])]),s._v(" "),a("h2",{attrs:{id:"session-相关的概念介绍-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#session-相关的概念介绍-2"}},[s._v("#")]),s._v(" Session 相关的概念介绍")]),s._v(" "),a("ul",[a("li",[s._v("sessionStorage ： 仅在当前会话下有效， 关闭页面或者浏览器后被清楚")]),s._v(" "),a("li",[s._v("localstorage: 除非别清楚， 否则永久保存")])]),s._v(" "),a("h1",{attrs:{id:"jwt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt"}},[s._v("#")]),s._v(" JWT")]),s._v(" "),a("h2",{attrs:{id:"什么是jwt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是jwt"}},[s._v("#")]),s._v(" 什么是JWT？")]),s._v(" "),a("ul",[a("li",[s._v("定义了一种紧凑且独立的方式吗可以将各方之间的信息作为JSON对象进行传输")]),s._v(" "),a("li",[s._v("该信息可以验证和信任， 因为是经过数字签名的")])]),s._v(" "),a("h2",{attrs:{id:"header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[s._v("#")]),s._v(" header")]),s._v(" "),a("ul",[a("li",[s._v("typ: token的类型， 这里固定为JWT")]),s._v(" "),a("li",[s._v("alg: 使用过的 hash 算法， 例如： HMAC SHA256 或者 RSA")])]),s._v(" "),a("h2",{attrs:{id:"payload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payload"}},[s._v("#")]),s._v(" Payload")]),s._v(" "),a("ul",[a("li",[s._v("存储需要传递的信息，如用户ID、 用户名等")]),s._v(" "),a("li",[s._v("还包含原数据、如果其时间、发布人等")]),s._v(" "),a("li",[s._v("与Header不同， Payload 可以加密")])]),s._v(" "),a("h2",{attrs:{id:"signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[s._v("#")]),s._v(" Signature")]),s._v(" "),a("ul",[a("li",[s._v("对 Header 和 Payload 部分进行签名")]),s._v(" "),a("li",[s._v("保证 Token 在传输的过程中没有被篡改或者损坏")])]),s._v(" "),a("h1",{attrs:{id:"jwt-vs-session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jwt-vs-session"}},[s._v("#")]),s._v(" JWT vs Session")]),s._v(" "),a("h2",{attrs:{id:"可拓展性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可拓展性"}},[s._v("#")]),s._v(" 可拓展性")]),s._v(" "),a("p",[s._v("随着应用程序的扩大，应用程序人员的增加， 必然要拓展我的程序， 有水平拓展， 垂直拓展， 水平拓展就是加服务器， 垂直拓展就是增加服务器的硬件性能， 比如： 磁盘、内存、cpu等。json数据是存在数据库中的，在水平拓展方案中， 就需要独立的、专门的、中心式的一个session存储系统， 否则session是没办法共享的，存储系统便于所有服务器都可以访问session，共享session， 否则session的缺陷：存储的缺陷无法得到水平拓展。在这种情况下JWT是比session好一些的。因为session是无缝接入水平拓展的，基于token令牌这种校验方式是无状态的")]),s._v(" "),a("h2",{attrs:{id:"安全性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全性"}},[s._v("#")]),s._v(" 安全性")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("XSS攻击： 跨站脚本攻击，JavaScript是可以修改JWT的， 因为JWT是放在cookie sessionstorage中的。\n防范: 签名，加密")])]),s._v(" "),a("li",[a("p",[s._v("CSRF攻击： 跟cookie相关，只要session或者JWT存在cookie中，就有可能出现跨站请求伪造")])]),s._v(" "),a("li",[a("p",[s._v("重放攻击： 要尽量是过期时间短一些")])]),s._v(" "),a("li",[a("p",[s._v("中间人攻击： 加了https就好了，在传输过程中是数据是加密的")])]),s._v(" "),a("li",[a("p",[s._v("RESTful API: rest架构应该是无状态的， 所以session这种有状态的认证方式， 显然是不能用于RESTful API的")])])]),s._v(" "),a("h2",{attrs:{id:"性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[s._v("#")]),s._v(" 性能")]),s._v(" "),a("ul",[a("li",[s._v("JWT的性能不太好，在客户端发送服务端时， 可能会有大量的用户信息在JWT中，那么每个http请求都会产生大量的开销， 如果是session值会有到少量的开销， 因为session的id非常的小，JWT应为是个JSON，估计会是session的好几倍，")]),s._v(" "),a("li",[s._v("但是session存在服务当中的，每次也要通过sessionID在数据库中查看完整的信息，这肯定也是要消耗性能的\n总的来说"),a("strong",[s._v("JWT就是用空间来换时间")]),s._v("而"),a("strong",[s._v("session是用时间换空间")]),s._v("性能方面各有利弊")])]),s._v(" "),a("h2",{attrs:{id:"时效性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时效性"}},[s._v("#")]),s._v(" 时效性")]),s._v(" "),a("p",[a("strong",[s._v("JWT要比session差一些")])]),s._v(" "),a("ul",[a("li",[s._v("原因： JWT只能等到过期时间进行销毁， 而session存在服务端， 可以手动的去销毁")]),s._v(" "),a("li",[s._v("场景1： 若JWT中存储权限相关的信息，当前角色为小管理员，应为滥用管理员权限，就把当前角色权限降级了，但是JWT无法实时更新，必须等到过期才行，不能立即生效。所有当前角色可以乘着还是管理员的时间胡作非为")]),s._v(" "),a("li",[s._v("场景2： 用户发现自己的账号在异地被登录了，可能被盗号了。想修改密码来防止盗号，但是JWT没有过期，异地的账号依然可以操作，包括修改密码")])])])}),[],!1,null,null,null);a.default=r.exports}}]);
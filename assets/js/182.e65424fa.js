(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{521:function(s,e,a){"use strict";a.r(e);var r=a(4),t=Object(r.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[e("em",[s._v("前言: 因为写项目时需要用到"),e("code",[s._v("mysql")]),s._v(" "),e("code",[s._v("postgres``mongodb``redis")]),s._v("一些数据库 不想再自己电脑上安装这些 使用率不是很多 就想到了docker, 无论在服务器还时自己的电脑上, 感觉docker更符合我的场景")])]),s._v(" "),e("h2",{attrs:{id:"docker安装及使用教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker安装及使用教程"}},[s._v("#")]),s._v(" "),e("a",{attrs:{href:"https://juejin.im/post/6844904201990963213",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker安装及使用教程"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"卸载docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载docker"}},[s._v("#")]),s._v(" 卸载docker")]),s._v(" "),e("p",[s._v("1.  先查询下docker： yum list installed|grep docker ，然后执行卸载命令："),e("code",[s._v("yum -y remove  docker.x86_64   docker-client.x86_64  docker-common.x86_64")]),s._v("\n2.  执行删除已存在的镜像和容器（以实际情况而定）： "),e("code",[s._v("rm -rf  /var/lib/docker")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除相关组件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果使用种方式的话，需要罗列全部使安装过的组件；")]),s._v("\nyum remove "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-selinux "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-engine-selinux "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  docker-engine\n                \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二种方式，使用匹配符直接删除全部")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 推荐使用第二种方式，无需罗列所有的安装组件")]),s._v("\nyum remove "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" docker-*\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除注册的服务")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /etc/systemd/system/docker.service.d\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除docker工作目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /var/lib/docker*\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /var/run/docker*\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除配置文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 直接清空这个文件夹，下面所有配置都将被清空")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" /etc/docker\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#----------------------------#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /etc/docker/daemon.json    #")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /ect/docker/key.json       #")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#----------------------------#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找残留的docker")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("h3",{attrs:{id:"安装docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装docker"}},[s._v("#")]),s._v(" 安装docker")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 第一步，需要安装一些依赖组件\n# 安装所需的软件包。yum-utils 提供了 yum-config-manager，\n# 并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2。\nyum install -y yum-utils \\\n  device-mapper-persistent-data \\\n  lvm2\n# 使用以下命令来获得稳定的仓库\n# 阿里云源地址速度相对比较快，这里是设置源地址为阿里云的镜像仓库地址。\n# yum-config-manager \\\n#    --add-repo \\\n#    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n    \n# 安装 Docker Engine-Community\nyum install -y docker-ce docker-ce-cli containerd.io\n# 将当前用户添加到docker用户组\nusermod -aG docker ${USER}\n# Docker默认未启动，需要手动重启docker服务\nsystemctl restart docker\nsystemctl start docker\nsystemctl stop docker\n# 切换当前会话到docker组\nnewgrp - docker\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("h3",{attrs:{id:"docker镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker镜像加速"}},[s._v("#")]),s._v(" docker镜像加速")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('sudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-\'EOF\'\n{\n  "registry-mirrors": [ "https://fpr97nhz.mirror.aliyuncs.com" ]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"docker-入门教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-入门教程"}},[s._v("#")]),s._v(" "),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker 入门教程"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"image-文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#image-文件"}},[s._v("#")]),s._v(" image 文件")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出本机的所有 image 文件。")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 image 文件")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("imageName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"容器文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器文件"}},[s._v("#")]),s._v(" 容器文件")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出本机正在运行的容器")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出本机所有容器，包括终止运行的容器")]),s._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" container "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--all")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("终止运行的容器文件，依然会占据硬盘空间，可以使用"),e("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/container_rm/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[s._v("docker container rm")]),e("OutboundLink")],1),s._v("命令删除。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container rm [containerID]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[s._v("#")]),s._v(" 实例")]),s._v(" "),e("p",[s._v("首先，运行下面的命令，将 image 文件从仓库抓取到本地。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker image pull library/hello-world\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("上面代码中，"),e("code",[s._v("docker image pull")]),s._v("是抓取 image 文件的命令。"),e("code",[s._v("library/hello-world")]),s._v("是 image 文件在仓库里面的位置，其中"),e("code",[s._v("library")]),s._v("是 image 文件所在的组，"),e("code",[s._v("hello-world")]),s._v("是 image 文件的名字。\n由于 Docker 官方提供的 image 文件，都放在"),e("a",{attrs:{href:"https://hub.docker.com/r/library/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[s._v("library")]),e("OutboundLink")],1),s._v("组里面，所以它的是默认组，可以省略。因此，上面的命令可以写成下面这样。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker image pull hello-world\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("抓取成功以后，就可以在本机看到这个 image 文件了。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker image ls\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("现在，运行这个 image 文件。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container run hello-world\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("code",[s._v("docker container run")]),s._v("命令会从 image 文件，生成一个正在运行的容器实例。\n注意，"),e("code",[s._v("docker container run")]),s._v("命令具有自动抓取 image 文件的功能。如果发现本地没有指定的 image 文件，就会从仓库自动抓取。因此，前面的"),e("code",[s._v("docker image pull")]),s._v("命令并不是必需的步骤。\n如果运行成功，你会在屏幕上读到下面的输出。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container run hello-world\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n... ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("输出这段提示以后，"),e("code",[s._v("hello world")]),s._v("就会停止运行，容器自动终止。\n有些容器不会自动终止，因为提供的是服务。比如，安装运行 Ubuntu 的 image，就可以在命令行体验 Ubuntu 系统。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container run -it ubuntu bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("对于那些不会自动终止的容器，必须使用"),e("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/container_kill/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[s._v("docker container kill")]),e("OutboundLink")],1),s._v(" 命令手动终止。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container kill [containID]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" dockerFile")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/webp/714491/1602480106829-d4e077eb-849d-48e4-bd1a-0cd36e7d17da.webp#align=left&display=inline&height=296&margin=%5Bobject%20Object%5D&originHeight=296&originWidth=563&size=0&status=done&style=none&width=563",alt:""}})]),s._v(" "),e("h2",{attrs:{id:"gui-工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gui-工具"}},[s._v("#")]),s._v(" GUI 工具")]),s._v(" "),e("p",[s._v("推荐使用 Portainer 作为容器的 GUI 管理方案。\n推荐使用 Portainer 作为容器的 GUI 管理方案。")]),s._v(" "),e("blockquote",[e("p",[s._v("官方地址："),e("a",{attrs:{href:"https://links.jianshu.com/go?to=https%3A%2F%2Fportainer.io%2Finstall.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("portainer.io/install.htm…"),e("OutboundLink")],1)])]),s._v(" "),e("p",[s._v("安装命令")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("docker volume create portainer_data")]),s._v(" "),e("code",[s._v("docker run -d -p ``8000``:8000 -p ``9000``:9000 --name``=``portainer --restart``=``always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce")])])]),s._v(" "),e("h2",{attrs:{id:"常用命令汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令汇总"}},[s._v("#")]),s._v(" 常用命令汇总")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看docker基础信息")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" info\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拉取镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("containerId"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 移除镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" rmi "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageId"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动、停止、重启容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("containerId"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" start "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("containerId"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("containerId"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-itd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--name")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -P/-p"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("port"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /bin/bash\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看docker容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("-a"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打包镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remotePath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" push "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remotePath"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录docker")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" login "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("remoteIp"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器内部")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-it")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("containerId"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /bin/bash\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从仓库搜索镜像")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" search "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("imageName"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])]),e("p",[e("strong",[s._v("（1）docker container start")]),s._v("\n前面的"),e("code",[s._v("docker container run")]),s._v("命令是新建容器，每运行一次，就会新建一个容器。同样的命令运行两次，就会生成两个一模一样的容器文件。如果希望重复使用容器，就要使用"),e("code",[s._v("docker container start")]),s._v("命令，它用来启动已经生成、已经停止运行的容器文件。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container start [containerID]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("（2）docker container stop")]),s._v("\n前面的"),e("code",[s._v("docker container kill")]),s._v("命令终止容器运行，相当于向容器里面的主进程发出 SIGKILL 信号。而"),e("code",[s._v("docker container stop")]),s._v("命令也是用来终止容器运行，相当于向容器里面的主进程发出 SIGTERM 信号，然后过一段时间再发出 SIGKILL 信号。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ bash container stop [containerID]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这两个信号的差别是，应用程序收到 SIGTERM 信号以后，可以自行进行收尾清理工作，但也可以不理会这个信号。如果收到 SIGKILL 信号，就会强行立即终止，那些正在进行中的操作会全部丢失。\n"),e("strong",[s._v("（3）docker container logs")]),s._v(" "),e("code",[s._v("docker container logs")]),s._v("命令用来查看 docker 容器的输出，即容器里面 Shell 的标准输出。如果"),e("code",[s._v("docker run")]),s._v("命令运行容器的时候，没有使用"),e("code",[s._v("-it")]),s._v("参数，就要用这个命令查看输出。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container logs [containerID]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("（4）docker container exec")]),s._v(" "),e("code",[s._v("docker container exec")]),s._v("命令用于进入一个正在运行的 docker 容器。如果"),e("code",[s._v("docker run")]),s._v("命令运行容器的时候，没有使用"),e("code",[s._v("-it")]),s._v("参数，就要用这个命令进入容器。一旦进入了容器，就可以在容器的 Shell 执行命令了。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container exec -it [containerID] /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("code",[s._v("exit")]),s._v(" 容器停止退出\n"),e("code",[s._v("crtl+p+q")]),s._v(" 容器不停止退出\n"),e("strong",[s._v("（5）docker container cp")]),s._v(" "),e("code",[s._v("docker container cp")]),s._v("命令用于从正在运行的 Docker 容器里面，将文件拷贝到本机。下面是拷贝到当前目录的写法。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container cp [containID]:[/path/to/file] .\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"命令行技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令行技巧"}},[s._v("#")]),s._v(" 命令行技巧")]),s._v(" "),e("h4",{attrs:{id:"删除所有镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除所有镜像"}},[s._v("#")]),s._v(" 删除所有镜像")]),s._v(" "),e("p",[s._v("docker rmi -f $(docker images -qa)")]),s._v(" "),e("h4",{attrs:{id:"停用全部运行中的容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停用全部运行中的容器"}},[s._v("#")]),s._v(" 停用全部运行中的容器")]),s._v(" "),e("p",[s._v("docker stop $(docker ps -q)")]),s._v(" "),e("h4",{attrs:{id:"删除所有的容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除所有的容器"}},[s._v("#")]),s._v(" 删除所有的容器")]),s._v(" "),e("p",[s._v("docker rm $(docker ps -aq)")]),s._v(" "),e("h4",{attrs:{id:"停用并删除所有容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停用并删除所有容器"}},[s._v("#")]),s._v(" 停用并删除所有容器")]),s._v(" "),e("p",[s._v("docker stop $(docker ps -q) & docker rm $(docker ps -aq)")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("删除所有为运行的容器 使用linux命令")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("docker container ls -f status-exited | awk '${print$1}' | awk 'NR>1' | xargs docker container rm")])])])]),s._v(" "),e("li",[e("p",[s._v("批量启动容器 使用docker命令")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("docker container ls -q -f status=created")]),s._v(" 查找所有状态为created的容器 并获取其ID")]),s._v(" "),e("li",[e("code",[s._v("docker container start $(docker container ls -q -f status=created)")])])])])]),s._v(" "),e("h2",{attrs:{id:"docker配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker配置"}},[s._v("#")]),s._v(" docker配置")]),s._v(" "),e("h3",{attrs:{id:"etc-docker-daemon-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etc-docker-daemon-json"}},[s._v("#")]),s._v(" "),e("code",[s._v("/etc/docker/daemon.json")])]),s._v(" "),e("div",{staticClass:"language-dockerfile line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[s._v('{\n    "authorization-plugins": [],//访问授权插件\n    "data-root": "",//docker数据持久化存储的根目录\n    "dns": [],//DNS服务器\n    "dns-opts": [],//DNS配置选项，如端口等\n    "dns-search": [],//DNS搜索域名\n    "exec-opts": [],//执行选项\n    "exec-root": "",//执行状态的文件的根目录\n    "experimental": false,//是否开启试验性特性\n    "storage-driver": "",//存储驱动器\n    "storage-opts": [],//存储选项\n    "labels": [],//键值对式标记docker元数据\n    "live-restore": true,//dockerd挂掉是否保活容器（避免了docker服务异常而造成容器退出）\n    "log-driver": "",//容器日志的驱动器\n    "log-opts": {},//容器日志的选项\n    "mtu": 0,//设置容器网络MTU（最大传输单元）\n    "pidfile": "",//daemon PID文件的位置\n    "cluster-store": "",//集群存储系统的URL\n    "cluster-store-opts": {},//配置集群存储\n    "cluster-advertise": "",//对外的地址名称\n    "max-concurrent-downloads": 3,//设置每个pull进程的最大并发\n    "max-concurrent-uploads": 5,//设置每个push进程的最大并发\n    "default-shm-size": "64M",//设置默认共享内存的大小\n    "shutdown-timeout": 15,//设置关闭的超时时限(who?)\n    "debug": true,//开启调试模式\n    "hosts": [],//监听地址(?)\n    "log-level": "",//日志级别\n    "tls": true,//开启传输层安全协议TLS\n    "tlsverify": true,//开启输层安全协议并验证远程地址\n    "tlscacert": "",//CA签名文件路径\n    "tlscert": "",//TLS证书文件路径\n    "tlskey": "",//TLS密钥文件路径\n    "swarm-default-advertise-addr": "",//swarm对外地址\n    "api-cors-header": "",//设置CORS（跨域资源共享-Cross-origin resource sharing）头\n    "selinux-enabled": false,//开启selinux(用户、进程、应用、文件的强制访问控制)\n    "userns-remap": "",//给用户命名空间设置 用户/组\n    "group": "",//docker所在组\n    "cgroup-parent": "",//设置所有容器的cgroup的父类(?)\n    "default-ulimits": {},//设置所有容器的ulimit\n    "init": false,//容器执行初始化，来转发信号或控制(reap)进程\n    "init-path": "/usr/libexec/docker-init",//docker-init文件的路径\n    "ipv6": false,//开启IPV6网络\n    "iptables": false,//开启防火墙规则\n    "ip-forward": false,//开启net.ipv4.ip_forward\n    "ip-masq": false,//开启ip掩蔽(IP封包通过路由器或防火墙时重写源IP地址或目的IP地址的技术)\n    "userland-proxy": false,//用户空间代理\n    "userland-proxy-path": "/usr/libexec/docker-proxy",//用户空间代理路径\n    "ip": "0.0.0.0",//默认IP\n    "bridge": "",//将容器依附(attach)到桥接网络上的桥标识\n    "bip": "",//指定桥接ip\n    "fixed-cidr": "",//(ipv4)子网划分，即限制ip地址分配范围，用以控制容器所属网段实现容器间(同一主机或不同主机间)的网络访问\n    "fixed-cidr-v6": "",//（ipv6）子网划分\n    "default-gateway": "",//默认网关\n    "default-gateway-v6": "",//默认ipv6网关\n    "icc": false,//容器间通信\n    "raw-logs": false,//原始日志(无颜色、全时间戳)\n    "allow-nondistributable-artifacts": [],//不对外分发的产品提交的registry仓库\n    "registry-mirrors": [],//registry仓库镜像\n    "seccomp-profile": "",//seccomp配置文件\n    "insecure-registries": [],//非https的registry地址\n    "no-new-privileges": false,//禁止新优先级(??)\n    "default-runtime": "runc",//OCI联盟(The Open Container Initiative)默认运行时环境\n    "oom-score-adjust": -500,//内存溢出被杀死的优先级(-1000~1000)\n    "node-generic-resources": ["NVIDIA-GPU=UUID1", "NVIDIA-GPU=UUID2"],//对外公布的资源节点\n    "runtimes": {//运行时\n        "cc-runtime": {\n            "path": "/usr/bin/cc-runtime"\n        },\n        "custom": {\n            "path": "/usr/local/bin/my-runc-replacement",\n            "runtimeArgs": [\n                "--debug"\n            ]\n        }\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br")])]),e("h3",{attrs:{id:"更换镜像源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更换镜像源"}},[s._v("#")]),s._v(" 更换镜像源")]),s._v(" "),e("ol",[e("li",[s._v("首先，修改配置文件 "),e("code",[s._v("vi /etc/docker/daemon.json")])])]),s._v(" "),e("div",{staticClass:"language-dockerfile line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[s._v('"registry-mirrors": ["https//registry.docker-cn.com"]\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[s._v("然后，加载Docker配置 "),e("code",[s._v("systemctl daemon-reload")])])]),s._v(" "),e("li",[e("p",[s._v("最后，重启Docker服务就好了 "),e("code",[s._v("systemctl restart docker.service")])])])]),s._v(" "),e("p",[s._v("附：\n国内的几个优秀的Docker源")]),s._v(" "),e("ul",[e("li",[s._v("Docker中国区官方镜像 "),e("a",{attrs:{href:"https://registry.docker-cn.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://registry.docker-cn.com"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("网易蜂巢 "),e("a",{attrs:{href:"http://hub-mirror.c.163.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://hub-mirror.c.163.com"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("中国科技大学 "),e("a",{attrs:{href:"https://docker.mirrors.ustc.edu.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://docker.mirrors.ustc.edu.cn"),e("OutboundLink")],1)]),s._v(" "),e("li",[s._v("阿里镜像 xxx.mirror.aliyuncs.com （需要注册，xxx代表你的账号）")]),s._v(" "),e("li",[s._v("DaoCloud xxxx.m.daocloud.ip （需要注册，xxx代表你的账号）")])]),s._v(" "),e("h2",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),e("h3",{attrs:{id:"cnm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cnm"}},[s._v("#")]),s._v(" CNM")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/714491/1604573908501-f5829082-6b0c-401a-82e5-66b557d479e8.png#align=left&display=inline&height=395&margin=%5Bobject%20Object%5D&name=image.png&originHeight=395&originWidth=721&size=174736&status=done&style=none&width=721",alt:"image.png"}}),s._v(" "),e("strong",[s._v("CNM Drivers")]),s._v(" "),e("strong",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/714491/1604573952037-1c1dd9dd-3516-4e26-ab2c-d3c345cfb508.png#align=left&display=inline&height=370&margin=%5Bobject%20Object%5D&name=image.png&originHeight=370&originWidth=666&size=143617&status=done&style=none&width=666",alt:"image.png"}})])]),s._v(" "),e("h3",{attrs:{id:"容器内部网络空间是否与外面一致"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器内部网络空间是否与外面一致"}},[s._v("#")]),s._v(" 容器内部网络空间是否与外面一致")]),s._v(" "),e("p",[s._v("在容器外"),e("code",[s._v("ip a")]),s._v("\n查看容器内所有"),e("code",[s._v("ip:``docker container exec ${containerName} ip a")])]),s._v(" "),e("h3",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),e("h2",{attrs:{id:"-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[s._v("#")])]),s._v(" "),e("h2",{attrs:{id:"docker-微服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-微服务"}},[s._v("#")]),s._v(" docker 微服务")]),s._v(" "),e("h2",{attrs:{id:"-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[s._v("#")])]),s._v(" "),e("hr"),s._v(" "),e("h2",{attrs:{id:"nginx-容器教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-容器教程"}},[s._v("#")]),s._v(" "),e("a",{attrs:{href:"https://www.yuque.com/izhaong/blog/pdeegh#Uyci8",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nginx 容器教程"),e("OutboundLink")],1)]),s._v(" "),e("h3",{attrs:{id:"http-服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-服务"}},[s._v("#")]),s._v(" HTTP 服务")]),s._v(" "),e("p",[s._v("Nginx 的最大作用，就是搭建一个 Web Server。有了容器，只要一行命令，服务器就架设好了，完全不用配置。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ docker container run \\\n  -d \\\n  -p 127.0.0.1:8080:80 \\\n  --rm \\\n  --name mynginx \\\n  nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("上面命令下载并运行官方的 "),e("a",{attrs:{href:"https://hub.docker.com/_/nginx/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Nginx image"),e("OutboundLink")],1),s._v("，默认是最新版本（latest），当前是 1.13.9。如果本机安装过以前的版本，请删掉重新安装，因为只有 1.13.9 才开始支持 server push。\n上面命令的各个参数含义如下。")]),s._v(" "),e("blockquote",[e("ul",[e("li",[e("code",[s._v("-d")]),s._v("：在后台运行")]),s._v(" "),e("li",[e("code",[s._v("-p")]),s._v(" ：容器的"),e("code",[s._v("80")]),s._v("端口映射到"),e("code",[s._v("127.0.0.1:8080")])]),s._v(" "),e("li",[e("code",[s._v("--rm")]),s._v("：容器停止运行后，自动删除容器文件")]),s._v(" "),e("li",[e("code",[s._v("--name")]),s._v("：容器的名字为"),e("code",[s._v("mynginx")])])])]),s._v(" "),e("h2",{attrs:{id:"映射网页目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#映射网页目录"}},[s._v("#")]),s._v(" 映射网页目录")]),s._v(" "),e("p",[s._v("网页文件都在容器里，没法直接修改，显然很不方便。下一步就是让网页文件所在的目录"),e("code",[s._v("/usr/share/nginx/html")]),s._v("映射到本地。\n首先，新建一个目录，并进入该目录。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ mkdir nginx-docker-demo\n$ cd nginx-docker-demo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("然后，新建一个"),e("code",[s._v("html")]),s._v("子目录。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("$ mkdir html\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("在这个子目录里面，放置一个"),e("code",[s._v("index.html")]),s._v("文件，内容如下。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("<h1>Hello World</h1>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("接着，就可以把这个子目录"),e("code",[s._v("html")]),s._v("，映射到容器的网页文件目录"),e("code",[s._v("/usr/share/nginx/html")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('$ docker container run \\\n  -d \\\n  -p 127.0.0.1:8080:80 \\\n  --rm \\\n  --name mynginx \\\n  --volume "$PWD/html":/usr/share/nginx/html \\\n  nginx\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("打开浏览器，访问 127.0.0.1:8080，应该就能看到 Hello World 了。")]),s._v(" "),e("h2",{attrs:{id:"使用的案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用的案例"}},[s._v("#")]),s._v(" 使用的案例")]),s._v(" "),e("ul",[e("li",[s._v("创建mysql5.7\n"),e("ul",[e("li",[e("code",[s._v("docker run -p 33306:3306 -e MYSQL_ROOT_PASSWORD=qq164165005 --name eggmysql -d mysql:5.7")])])])])]),s._v(" "),e("h2",{attrs:{id:"在使用docker中遇到的问题-需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在使用docker中遇到的问题-需求"}},[s._v("#")]),s._v(" 在使用docker中遇到的问题&需求")]),s._v(" "),e("h3",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[s._v("#")]),s._v(" 问题")]),s._v(" "),e("h4",{attrs:{id:"docker启动时的报错汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker启动时的报错汇总"}},[s._v("#")]),s._v(" "),e("a",{attrs:{href:"https://www.jianshu.com/p/93518610eea1",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker启动时的报错汇总"),e("OutboundLink")],1)]),s._v(" "),e("hr"),s._v(" "),e("ul",[e("li",[s._v("Failed to start Docker Application Container Engine.")])]),s._v(" "),e("p",[s._v("修改/etc/docker/daemon.json这个文件")]),s._v(" "),e("div",{staticClass:"language-dockerfile line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[s._v('"registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"]\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("hr"),s._v(" "),e("ul",[e("li",[s._v("docker.service failed.")])]),s._v(" "),e("hr"),s._v(" "),e("ul",[e("li",[s._v("Failed to restart docker.service: Unit not found.")])]),s._v(" "),e("p",[e("strong",[s._v("docker.service启动失败：Unit not found的原因及解决办法")]),s._v("\n删除/usr/lib/systemd/system/docker.service的[UNIT]里包含的docker.socket，然后systemctl daemon-reload，最后systemctl start docker.service，发现启动成功了。\n类似情况\n如果是类似的情况，缺少docker.socket，但是新版本需要docker.socket。有两种方法可以解决该问题:")]),s._v(" "),e("ol",[e("li",[s._v("可以卸载docker，再重新安装，即可出现docker.socket。或者")]),s._v(" "),e("li",[s._v("创建一个/usr/lib/systemd/system/docker.socket文件，然后systemctl\ndaemon-reload，最后systemctl start docker.service，即可启动成功。")])]),s._v(" "),e("hr"),s._v(" "),e("h4",{attrs:{id:"当构建完镜像启动容器时失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#当构建完镜像启动容器时失败"}},[s._v("#")]),s._v(" 当构建完镜像启动容器时失败")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("在最后加上 "),e("code",[s._v('sh -c "while true; do sleep 3600; done"')])])]),s._v(" "),e("li",[e("p",[s._v("DockerFile 最后加入 "),e("code",[s._v('ENTRYPOINT ["sh", "-c", " exec tail -f /dev/null"]')]),s._v("防止容器启动就退出, 用这个命令一直前台阻塞")])]),s._v(" "),e("li",[e("p",[s._v("删除未启动的容器 重新构建镜像")])]),s._v(" "),e("li",[e("p",[s._v("进入容器"),e("code",[s._v("docker exec [contianerID] -it /bin/sh")])])])]),s._v(" "),e("p",[s._v("查看文件类型  .sh    设置文件类型"),e("code",[s._v('set ff="unix"')])]),s._v(" "),e("h4",{attrs:{id:"permission-denied"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#permission-denied"}},[s._v("#")]),s._v(" permission denied")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("sudo docker image ls")])]),s._v(" "),e("li",[e("p",[s._v("sudo goupadd docker")])]),s._v(" "),e("li",[e("p",[s._v("sudo gpasswd -a ${USER} docker")])]),s._v(" "),e("li",[e("p",[s._v("sudo service docker restart")])]),s._v(" "),e("li",[e("p",[s._v("logout 重新登录下")])])]),s._v(" "),e("h4",{attrs:{id:"运行node项目-自动退出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#运行node项目-自动退出"}},[s._v("#")]),s._v(" 运行node项目 自动退出")]),s._v(" "),e("p",[s._v("运行容器的时候     自动进入项目命令行交互界面敲击")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker run -it pptr-image bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"需求收集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求收集"}},[s._v("#")]),s._v(" 需求收集")]),s._v(" "),e("h4",{attrs:{id:"容器中调用宿主机docker命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器中调用宿主机docker命令"}},[s._v("#")]),s._v(" 容器中调用宿主机docker命令")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/nanhavezhi/article/details/103079056",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.csdn.net/nanhavezhi/article/details/103079056"),e("OutboundLink")],1),s._v("\n在构建容器时加上docker的目录映射")]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("run"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sock"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("run"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sock  \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("v "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("docker    \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"在容器外执行某个容器内的某个命令操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在容器外执行某个容器内的某个命令操作"}},[s._v("#")]),s._v(" 在容器外执行某个容器内的某个命令操作")]),s._v(" "),e("p",[s._v("命令如下 加上"),e("code",[s._v("-c $cmd")])]),s._v(" "),e("div",{staticClass:"language-dockerfile line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[s._v("sudo docker exec -it $DOCKER_ID /bin/bash -c 'cd /packages/detectron && python tools/train.py'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);